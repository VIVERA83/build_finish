"""Initial tables

Revision ID: 787b5cacd670
Revises: 
Create Date: 2024-08-21 23:50:28.090640

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "787b5cacd670"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "brands",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "description",
            sa.String(),
            server_default="Описание производителя.",
            nullable=False,
        ),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title"),
        schema="build_finish",
    )
    op.create_table(
        "categories",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "description",
            sa.String(),
            server_default="Описание категории.",
            nullable=False,
        ),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("title"),
        schema="build_finish",
    )
    op.create_table(
        "products",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column(
            "description",
            sa.String(),
            server_default="Описание товара.",
            nullable=False,
        ),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("category", sa.UUID(), nullable=False),
        sa.Column("brand", sa.UUID(), nullable=False),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            postgresql.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["brand"], ["build_finish.brands.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["category"], ["build_finish.categories.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="build_finish",
    )
    op.create_index(
        op.f("ix_build_finish_products_brand"),
        "products",
        ["brand"],
        unique=False,
        schema="build_finish",
    )
    op.create_index(
        op.f("ix_build_finish_products_category"),
        "products",
        ["category"],
        unique=False,
        schema="build_finish",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_build_finish_products_category"),
        table_name="products",
        schema="build_finish",
    )
    op.drop_index(
        op.f("ix_build_finish_products_brand"),
        table_name="products",
        schema="build_finish",
    )
    op.drop_table("products", schema="build_finish")
    op.drop_table("categories", schema="build_finish")
    op.drop_table("brands", schema="build_finish")
    # ### end Alembic commands ###
